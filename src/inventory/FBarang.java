/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventory;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import database.InventoryDB;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author indak
 */
public class FBarang extends javax.swing.JFrame {

    private Connection conn;
    private ResultSet rs;
    DefaultTableModel model = new DefaultTableModel();
    InventoryDB ks = new InventoryDB();

    /**
     * Creates new form FormMhs
     */
    public FBarang() {
        initComponents();
        model = new DefaultTableModel();
        tblBarang.setModel(model);
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Harga");
        model.addColumn("Stok");
        loadDatabase();
        bersih();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtKodeBarang = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNamaBarang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnTutup = new javax.swing.JButton();
        spinnerHargaBarang = new javax.swing.JSpinner();
        spinnerStokBarang = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBarang);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Master Barang");

        jLabel2.setText("Kode Barang");

        txtKodeBarang.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKodeBarangCaretUpdate(evt);
            }
        });

        jLabel3.setText("Nama Barang");

        jLabel4.setText("Harga Satuan (Rp.)");

        jLabel5.setText("Stok");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnTutup.setText("Tutup");
        btnTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTutupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addGap(172, 172, 172)
                        .addComponent(btnTutup)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnHapus)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spinnerHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinnerStokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtNamaBarang, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                        .addComponent(txtKodeBarang, javax.swing.GroupLayout.Alignment.LEADING)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(spinnerHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(spinnerStokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnTutup)
                    .addComponent(btnHapus))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBarangMouseClicked
        // Gets the selected row from a table (e.g. on a button event or other event)
        int baris = tblBarang.getSelectedRow();

        if (baris != -1) { // Make sure the row is selected
            try {
                String code = tblBarang.getValueAt(baris, 0).toString(); // Retrieve the product code from the first column (index 0)
                String name = tblBarang.getValueAt(baris, 1).toString(); // Retrieve the product name from the second column (index 1)
                String priceStr = tblBarang.getValueAt(baris, 2).toString(); // Retrieve the product price from the third column (index 2) as String
                String stockStr = tblBarang.getValueAt(baris, 3).toString(); // Retrieve the product stock from the fourth column (index 3) as String

                // Convert String values to appropriate data types (Integer)
                int price = Integer.parseInt(priceStr);
                int stock = Integer.parseInt(stockStr);

                // Set values to UI components based on the retrieved data
                txtKodeBarang.setText(code);
                txtNamaBarang.setText(name);
                spinnerHargaBarang.setValue(price);
                spinnerStokBarang.setValue(stock);

                // Here you may need to adjust logic for other UI components (if any)
                // Adapt according to the structure of your UI components
                JOptionPane.showMessageDialog(this, "Data berhasil ditampilkan");
            } catch (Exception e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(this, "Gagal menampilkan data");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silakan pilih baris terlebih dahulu");
        }
    }//GEN-LAST:event_tblBarangMouseClicked

    private void btnTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTutupActionPerformed
        dispose();
    }//GEN-LAST:event_btnTutupActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        String code = this.txtKodeBarang.getText();

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data dengan kode " + code + "?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Connection c = InventoryDB.getKoneksi();
                String sql = "DELETE FROM products WHERE code = ?";

                PreparedStatement p = c.prepareStatement(sql);
                p.setString(1, code);
                p.executeUpdate();
                p.close();

                JOptionPane.showMessageDialog(this, "Berhasil menghapus data dengan kode " + code);
            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(this, "Gagal menghapus data");
            } finally {
                loadDatabase();
                bersih();
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        String code = this.txtKodeBarang.getText(); // Get value from JTextField for product code
        String name = this.txtNamaBarang.getText(); // Get value from JTextField for product name

        if (code.isEmpty() || name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kode barang dan nama barang wajib diisi");
        } else {
            // Retrieve values from JSpinner Harga
            SpinnerNumberModel hargaModel = (SpinnerNumberModel) spinnerHargaBarang.getModel();
            int price = ((Number) hargaModel.getValue()).intValue();

            // Retrieve values from JSpinner Stok
            SpinnerNumberModel stokModel = (SpinnerNumberModel) spinnerStokBarang.getModel();
            int stock = ((Number) stokModel.getValue()).intValue();

            try {
                Connection c = InventoryDB.getKoneksi();
                // Check whether the item code is already in the table
                String checkIfExistsQuery = "SELECT COUNT(*) FROM products WHERE code = ?";
                PreparedStatement checkIfExistsStmt = c.prepareStatement(checkIfExistsQuery);
                checkIfExistsStmt.setString(1, code);
                ResultSet rs = checkIfExistsStmt.executeQuery();

                if (rs.next() && rs.getInt(1) > 0) {
                    int confirmUpdate = JOptionPane.showConfirmDialog(this, "Apakah Anda ingin melakukan update barang dengan kode " + code + "?", "Konfirmasi Update", JOptionPane.YES_NO_OPTION);

                    if (confirmUpdate == JOptionPane.YES_OPTION) {
                        // If the user confirms the update, perform the update operation
                        String updateQuery = "UPDATE products SET name = ?, price = ?, stock = ? WHERE code = ?";
                        PreparedStatement updateStmt = c.prepareStatement(updateQuery);
                        updateStmt.setString(1, name);
                        updateStmt.setInt(2, price);
                        updateStmt.setInt(3, stock);
                        updateStmt.setString(4, code);
                        updateStmt.executeUpdate();

                        JOptionPane.showMessageDialog(this, "Berhasil diubah");
                    } else {
                        JOptionPane.showMessageDialog(this, "Update dibatalkan");
                    }
                } else {
                    // If the item code does not yet exist, perform an insert operation
                    String insertQuery = "INSERT INTO products (code, name, price, stock) VALUES (?, ?, ?, ?)";
                    PreparedStatement insertStmt = c.prepareStatement(insertQuery);
                    insertStmt.setString(1, code);
                    insertStmt.setString(2, name);
                    insertStmt.setInt(3, price);
                    insertStmt.setInt(4, stock);
                    insertStmt.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Berhasil ditambahkan");
                }

                // Clean and update the display
                loadDatabase();
                bersih();
            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(this, "Gagal");
            }
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void txtKodeBarangCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKodeBarangCaretUpdate
        try {
            Connection c = InventoryDB.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM products WHERE code = '" + this.txtKodeBarang.getText() + "'";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                this.txtNamaBarang.setText(r.getString("name"));
                this.spinnerHargaBarang.setValue(r.getInt("price"));
                this.spinnerStokBarang.setValue(r.getInt("stock"));
                // If there are date_created and date_updated columns in the products table:
                // this.txtDateCreated.setText(r.getTimestamp("created_at").toString());
                // this.txtDateUpdated.setText(r.getTimestamp("updated_at").toString());
            }

            r.close();
            s.close();
        } catch (SQLException e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_txtKodeBarangCaretUpdate

    public void loadDatabase() {
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        try {
            Connection c = InventoryDB.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM products";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                Object[] o = new Object[4];
                o[0] = r.getString("code");
                o[1] = r.getString("name");
                o[2] = r.getString("price");
                o[3] = r.getString("stock");
                model.addRow(o);
            }

            r.close();
            s.close();
        } catch (SQLException e) {
            System.err.println(e);
        }
    }

    public void bersih() {
        txtKodeBarang.requestFocus();
        txtKodeBarang.setText("");
        txtNamaBarang.setText("");
        spinnerHargaBarang.setValue(0);
        spinnerStokBarang.setValue(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTutup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinnerHargaBarang;
    private javax.swing.JSpinner spinnerStokBarang;
    private javax.swing.JTable tblBarang;
    private javax.swing.JTextField txtKodeBarang;
    private javax.swing.JTextField txtNamaBarang;
    // End of variables declaration//GEN-END:variables
}
